---
description: Formatting ruleset for the project
globs: 
alwaysApply: false
---
# Code Formatting Rules

## Overview

This repository uses multiple formatting tools:
- Biome for JavaScript/TypeScript/JSON
- treefmt for multi-language formatting
- nixpkgs-fmt for Nix files

## Tool Configuration

### Biome
Located in `biome.json`:
```json
{
  "formatter": {
    "enabled": true,
    "indentStyle": "space",
    "indentWidth": 2,
    "lineWidth": 80
  },
  "linter": {
    "enabled": true,
    "rules": {
      "recommended": true
    }
  }
}
```

### treefmt
Located in `treefmt.toml`:
- Configures formatters for multiple languages
- Ensures consistent formatting across the codebase
- Integrates with pre-commit hooks

## Formatting Guidelines

### Nix Files
1. Use 2 spaces for indentation
2. Keep line length under 100 characters
3. Sort attribute sets alphabetically
4. Use consistent spacing around operators
5. Format lists and sets consistently

### Shell Scripts
1. Use 2 spaces for indentation
2. Add proper shebang lines
3. Follow shellcheck recommendations
4. Document complex commands
5. Use consistent variable naming

### Configuration Files
1. Use consistent indentation (2 spaces)
2. Sort keys alphabetically when possible
3. Use clear, descriptive names
4. Add comments for complex configurations

## Best Practices

### General
1. Run formatters before committing
2. Keep formatting configurations in sync
3. Document any formatting exceptions
4. Use consistent casing conventions
5. Follow language-specific idioms

### Pre-commit Hooks
```yaml
repos:
  - repo: local
    hooks:
      - id: treefmt
        name: Format code
        entry: treefmt
        language: system
        pass_filenames: false
```

### Editor Integration
- VS Code settings
- Cursor IDE configuration
- Git hooks
- CI/CD integration

## Common Commands

### Format All Files
```bash
# Using make
make fmt

# Using treefmt directly
treefmt

# Using biome
biome format .
```

### Check Formatting
```bash
# Using make
make check

# Using treefmt
treefmt --fail-on-change

# Using biome
biome check .
```

## Related Files
- biome.json
- treefmt.toml
- .editorconfig
- .vscode/settings.json
