---
description: 
globs: 
alwaysApply: false
---
# General Repository Rules

## Repository Overview

This is a dotfiles repository that uses:
- Nix/home-manager for package and configuration management
- GitHub Actions for CI/CD
- Biome for code formatting
- Renovate for dependency management

## Directory Structure

```
dotfiles/
├── .cursor/        # Cursor IDE configuration
├── .github/        # GitHub workflows and configurations
├── config/         # Application-specific configurations
├── home-manager/   # Home-manager configurations
├── hosts/         # Host-specific configurations
└── nix-darwin/    # Darwin-specific configurations
```

## Workflows

### Development Workflow
1. Make changes in relevant directories
2. Test changes locally using `make test`
3. Format code using `make fmt`
4. Commit changes following conventional commits
5. Push to GitHub and wait for CI checks

### Configuration Updates
1. Update configurations in appropriate directories
2. Test changes on local machine
3. Commit and push changes
4. CI will validate configurations

## Best Practices

1. Follow conventional commits
2. Keep configurations modular
3. Document all major changes
4. Test changes locally before pushing
5. Use proper formatting (Biome)
6. Keep dependencies updated (Renovate)

## Tools and Configurations

### Required Tools
- Nix package manager
- home-manager
- Git
- Make

### Configuration Files
- `flake.nix`: Main Nix configuration
- `biome.json`: Code formatting rules
- `renovate.json`: Dependency update rules
- `treefmt.toml`: Tree-sitter formatting rules

## CI/CD Pipeline

The repository uses GitHub Actions for:
1. Code formatting validation
2. Nix configuration checks
3. Build testing
4. Automated updates

## Related Files
- .github/workflows/
- Makefile
- flake.nix
- biome.json
- renovate.json

