name: E2E
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
concurrency:
  group: ${{ github.workflow }}-${{ github.event_name }}-${{ github.head_ref || github.sha }}
  cancel-in-progress: true
jobs:
  e2e-run:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 300
    strategy:
      matrix:
        include:
          - name: Ubuntu
            os: ubuntu-latest
          - name: NixOS
            os: ubuntu-latest
          - name: MacOS
            os: macos-latest
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: KVM Linux Virtualization
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y qemu-kvm libvirt-daemon-system libvirt-clients bridge-utils cpu-checker
          kvm-ok || echo "KVM acceleration may not be available"
          sudo modprobe kvm
          sudo chmod 666 /dev/kvm
          sudo systemctl start libvirtd
      - name: Setup Nix
        uses: cachix/install-nix-action@v31
        with:
          nix_path: nixpkgs=channel:nixos-unstable
          extra_nix_config: |
            experimental-features = nix-command flakes
            trusted-users = root runner
            system-features = kvm
            max-jobs = auto
            cores = 0
      - name: Prepare System Files
        if: runner.os == 'macOS'
        run: |
          for file in \
            /etc/nix/nix.conf \
            /etc/shells \
            /etc/bashrc \
            /etc/zshrc
          do
            if [ -e "$file" ]; then
              sudo mv "$file" "${file}.before-nix-darwin"
            fi
          done
      - name: Run Install Command
        run: |
          curl -fsSL https://raw.githubusercontent.com/shunkakinoki/dotfiles/${{ github.sha }}/install.sh | sh
        env:
          GITHUB_PR: ${{ github.event.pull_request.number }}
          NIX_CONFIG_TARGET: ${{ matrix.name == 'NixOS' && 'nixos' || '' }}
  e2e-check:
    if: always()
    needs:
      - e2e-run
    runs-on: ubuntu-latest
    timeout-minutes: 3
    steps:
      - name: Alls Green
        uses: re-actors/alls-green@release/v1
        with:
          jobs: ${{ toJSON(needs) }}
