name: Docker
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
concurrency:
  group: ${{ github.workflow }}-${{ github.event_name }}-${{ github.head_ref || github.sha }}
  cancel-in-progress: true
permissions:
  contents: read
  packages: write
jobs:
  docker-build-push:
    strategy:
      fail-fast: false
      matrix:
        build: ${{ github.ref == 'refs/heads/main' && github.event_name == 'push' && fromJSON('[{"platform":"linux/amd64","suffix":"-amd64","arch":"amd64"},{"platform":"linux/arm64","suffix":"-arm64","arch":"arm64"}]') || fromJSON('[{"platform":"linux/amd64","suffix":"-amd64","arch":"amd64"}]') }}
    runs-on: ubuntu-latest
    timeout-minutes: 300
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set Metadata
        id: metadata
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}
          flavor: |
            suffix=${{ matrix.build.suffix }}
            latest=${{ github.ref == 'refs/heads/main' && github.event_name == 'push' && 'false' || 'auto' }}
          tags: |
            type=sha,format=short,suffix=${{ matrix.build.suffix }},enable=${{ github.ref == 'refs/heads/main' && github.event_name == 'push' }}
            type=raw,value=latest,suffix=${{ matrix.build.suffix }},enable=${{ github.ref == 'refs/heads/main' && github.event_name == 'push' }}
            type=sha,format=short,enable=${{ !(github.ref == 'refs/heads/main' && github.event_name == 'push') }}
            type=semver,pattern={{version}},enable=${{ !(github.ref == 'refs/heads/main' && github.event_name == 'push') }}
            type=semver,pattern={{raw}},enable=${{ !(github.ref == 'refs/heads/main' && github.event_name == 'push') }}
            type=raw,value=latest,enable=${{ !(github.ref == 'refs/heads/main' && github.event_name == 'push') }}
          labels: |
            org.opencontainers.image.url=${{ github.server_url }}/${{ github.repository }}
            org.opencontainers.image.source=${{ github.event.pull_request.html_url || github.event.repository.html_url }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.pr-number=${{ github.event_name == 'pull_request' && github.event.pull_request.number || '' }}
      - name: Build and Push Docker
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          platforms: ${{ matrix.build.platform }}
          push: true
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}
          build-args: |
            COMMIT_SHA=${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
  docker-merge-manifests:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs:
      - docker-build-push
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set Metadata
        id: metadata
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}
          tags: |
            type=sha,format=short
            type=semver,pattern={{version}}
            type=semver,pattern={{raw}}
            type=raw,value=latest
      - name: Create and push multi-arch manifests
        env:
          TAGS: ${{ steps.metadata.outputs.tags }}
        run: |
          set -euo pipefail
          archs=(amd64 arm64)
          while IFS= read -r tag; do
            [ -n "$tag" ] || continue
            refs=()
            for arch in "${archs[@]}"; do
              refs+=("${tag}-${arch}")
            done
            docker manifest create --amend "$tag" "${refs[@]}"
            for arch in "${archs[@]}"; do
              docker manifest annotate "$tag" "${tag}-${arch}" --arch "$arch" --os linux
            done
            docker manifest push "$tag"
          done <<< "${TAGS}"
  docker-check:
    if: always()
    needs:
      - docker-build-push
      - docker-merge-manifests
    runs-on: ubuntu-latest
    timeout-minutes: 3
    steps:
      - name: Alls Green
        uses: re-actors/alls-green@release/v1
        with:
          allowed-skips: docker-merge-manifests
          jobs: ${{ toJSON(needs) }}
